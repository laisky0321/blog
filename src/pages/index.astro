---
import Layout from '../layouts/Layout.astro';
import ArticleCard from '../components/article';
export const prerender = false;

const response = await fetch('http://post.laiweimin.cn/all.json'); // 替换为你的远程 JSON 文件 URL
const data: any = await response.json();  // 解析 JSON 数据

// 定义 catalogList 的类型
interface CatalogItem {
	id: number;
	name: string;
	color: string;
}

const catalogList: CatalogItem[] = data.catalog;

// 定义类型
interface Card {
  key: string;
  title: string;
  catalog: number;
  summary: string;
  time: string;
}

// 强制类型声明
const cards: Card[] = data.card;

const url = new URL(Astro.url);
var catalog = url.searchParams.get('catalog');
if (catalog === null) {
	console.log(catalog);
  catalog = '0';
}




// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout>
	<ul class="catalog" style={{ display: 'flex', flexWrap: 'wrap' }}>
		<li><a href='/'>Home</a></li>
		{catalogList.map((catalogItem) => (
			<li>
				<a 
					href={`?catalog=${catalogItem.id}`} 
					style={`text-decoration: underline; text-underline-offset: 5px; text-decoration-thickness: 3px; text-decoration-color: ${catalogItem.color};`}
				>
					{catalogItem.name}
				</a>
			</li>
		))}
	</ul>
	<div class="article-list" style="display: flex; flex-wrap: wrap; gap: 16px; margin: 0 16px;">
		{cards
			.filter((item) => catalog === '0' || item.catalog.toString() === catalog) // 根据 catalog 字段筛选
			.map((item) => (
				<ArticleCard 
					article_key={item.key}
					title={item.title} 
					description={item.summary} 
					color={catalogList[item.catalog-1].color}
					time={item.time}
					client:load 
				/>
			))}
	</div>
</Layout>
